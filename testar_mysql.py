"""
Script de teste de conex√£o MySQL
Use este script para verificar se sua configura√ß√£o MySQL est√° funcionando
"""
import pymysql

# Configura√ß√µes do MySQL - EDITE AQUI!
MYSQL_CONFIG = {
    'host': 'localhost',
    'port': 3306,
    'user': 'root',
    'password': '',  # COLOQUE SUA SENHA AQUI!
    'charset': 'utf8mb4'
}

def testar_conexao():
    """Testa conex√£o com MySQL"""
    print("üîç Testando conex√£o MySQL...")
    print("=" * 40)
    
    # Verificar senha
    if not MYSQL_CONFIG['password']:
        print("‚ùå Configure a senha no script!")
        return False
    
    try:
        # Testar conex√£o
        conn = pymysql.connect(**MYSQL_CONFIG)
        cursor = conn.cursor()
        
        # Testar query
        cursor.execute("SELECT VERSION()")
        versao = cursor.fetchone()
        
        print(f"‚úÖ Conex√£o bem-sucedida!")
        print(f"üìä Vers√£o MySQL: {versao[0]}")
        
        # Listar bancos
        cursor.execute("SHOW DATABASES")
        bancos = cursor.fetchall()
        print(f"üóÉÔ∏è Bancos dispon√≠veis:")
        for banco in bancos:
            print(f"   - {banco[0]}")
        
        # Verificar se banco sistema_demandas existe
        cursor.execute("SHOW DATABASES LIKE 'sistema_demandas'")
        banco_existe = cursor.fetchone()
        
        if banco_existe:
            print("‚úÖ Banco 'sistema_demandas' encontrado!")
        else:
            print("‚ö†Ô∏è Banco 'sistema_demandas' n√£o existe")
            print("   Ser√° criado durante a migra√ß√£o")
        
        cursor.close()
        conn.close()
        
        print("\nüéâ MySQL est√° pronto para migra√ß√£o!")
        return True
        
    except pymysql.err.OperationalError as e:
        error_code, error_msg = e.args
        print(f"‚ùå Erro de conex√£o: {error_msg}")
        
        if error_code == 1045:
            print("üí° Dica: Verifique usu√°rio e senha")
        elif error_code == 2003:
            print("üí° Dica: Verifique se MySQL est√° rodando")
            print("   sudo systemctl start mysql")
        
        return False
        
    except Exception as e:
        print(f"‚ùå Erro inesperado: {e}")
        return False

def main():
    """Fun√ß√£o principal"""
    print("üß™ TESTE DE CONEX√ÉO MYSQL")
    print("=" * 50)
    
    sucesso = testar_conexao()
    
    if sucesso:
        print("\n‚úÖ Tudo pronto! Execute: python migrar_sqlite_mysql.py")
    else:
        print("\n‚ùå Corrija os problemas antes de migrar")
    
    return sucesso

if __name__ == "__main__":
    main()
